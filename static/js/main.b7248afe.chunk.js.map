{"version":3,"sources":["FlashCard.js","FlashCardList.js","App.js","Questions.js","index.js"],"names":["FlashCard","flashcard","useState","flip","setFlip","frontEl","useRef","backEl","className","onClick","ref","question","options","map","option","answer","FlashCardList","flashcards","id","questionCards","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAEe,SAASA,EAAT,GAAmC,IAAdC,EAAa,EAAbA,UAAa,EACvBC,oBAAS,GADc,mBACxCC,EADwC,KAClCC,EADkC,KAIzCC,EAAUC,mBACVC,EAASD,mBAcf,OACE,sBACEE,UAAS,eAAUL,EAAO,OAAS,IACnCM,QAAS,kBAAML,GAASD,IAF1B,UAIE,sBAAKK,UAAU,QAAQE,IAAKL,EAA5B,UACGJ,EAAUU,SACX,qBAAKH,UAAU,UAAf,SACGP,EAAUW,QAAQC,KAAI,SAACC,GACtB,OAAO,qBAAKN,UAAU,SAAf,SAAyBM,YAItC,qBAAKN,UAAU,OAAOE,IAAKH,EAA3B,SACGN,EAAUc,YChCJ,SAASC,EAAT,GAAwC,IAAfC,EAAc,EAAdA,WACtC,OACE,qBAAKT,UAAU,YAAf,SACGS,EAAWJ,KAAI,SAACZ,GACf,OAAO,cAACD,EAAD,CAAWC,UAAWA,GAAgBA,EAAUiB,S,UCFzDC,ECLoB,CACxB,CACED,GAAI,EACJP,SAAU,4CACVI,OAAQ,YACRH,QAAS,CAAC,YAAa,YAAa,kBAEtC,CACEM,GAAI,EACJP,SAAU,kDACVI,OAAQ,gBACRH,QAAS,CAAC,YAAa,YAAa,kBAEtC,CACEM,GAAI,EACJP,SAAU,mDACVI,OAAQ,YACRH,QAAS,CAAC,YAAa,YAAa,mBDCzBQ,MAXf,WAAgB,IAAD,EACuBlB,mBAASiB,GADhC,mBACNF,EADM,KAIb,OAJa,KAKX,qBAAKT,UAAU,YAAf,SACE,cAACQ,EAAD,CAAeC,WAAYA,OETjCI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b7248afe.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nexport default function FlashCard({ flashcard }) {\n  const [flip, setFlip] = useState(false);\n  // const [height, setHeight] = useState('initial');\n\n  const frontEl = useRef();\n  const backEl = useRef();\n\n  // function setMaxHeight() {\n  //   const frontHeight = frontEl.getBoundingClientRect;\n  //   const backtHeight = backEl.getBoundingClientReact;\n  //   setHeight(Math.max(frontHeight, backtHeight, 100));\n  // }\n\n  // useEffect(setMaxHeight, [\n  //   flashcard.question,\n  //   flashcard.answer,\n  //   flashcard.option,\n  // ]);\n\n  return (\n    <div\n      className={`card ${flip ? 'flip' : ''}`}\n      onClick={() => setFlip(!flip)}\n    >\n      <div className=\"front\" ref={frontEl}>\n        {flashcard.question}\n        <div className=\"options\">\n          {flashcard.options.map((option) => {\n            return <div className=\"option\">{option}</div>;\n          })}\n        </div>\n      </div>\n      <div className=\"back\" ref={backEl}>\n        {flashcard.answer}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport FlashCard from './FlashCard';\n\nexport default function FlashCardList({ flashcards }) {\n  return (\n    <div className=\"card-grid\">\n      {flashcards.map((flashcard) => {\n        return <FlashCard flashcard={flashcard} key={flashcard.id} />;\n      })}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport FlashCardList from './FlashCardList';\nimport './app.css';\nimport * as questions from './Questions.js';\n\nconst questionCards = questions.FLASHCARDS;\n\nfunction App() {\n  const [flashcards, setFlashcards] = useState(questionCards);\n\n  //useEffect(() => {}, []);\n  return (\n    <div className=\"container\">\n      <FlashCardList flashcards={flashcards} />\n    </div>\n  );\n}\n\nexport default App;\n","export const FLASHCARDS = [\n  {\n    id: 1,\n    question: 'What do you say when you start something?',\n    answer: 'Bismillah',\n    options: ['InshAllah', 'Bismillah', 'Alhamdulillah'],\n  },\n  {\n    id: 2,\n    question: 'What do you say when you are thankful to Allah?',\n    answer: 'Alhamdulillah',\n    options: ['InshAllah', 'Bismillah', 'Alhamdulillah'],\n  },\n  {\n    id: 3,\n    question: 'What do you say when you intend to do something?',\n    answer: 'InshAllah',\n    options: ['InshAllah', 'Bismillah', 'Alhamdulillah'],\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}